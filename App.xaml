<Application x:Class="MyCapital.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MyCapital"
             xmlns:fa ="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
         <!--Цвета -->
        <!--Фон страницы-->
        <LinearGradientBrush x:Key="ColorOne" StartPoint="0,0" EndPoint="0,5">
            <GradientStop Color="#c6f4d1" Offset="0.0"/>
            <GradientStop Color="#FFF5ECEB" Offset="0.5"/>
        </LinearGradientBrush>

        <!--Цвет элеметов на главной странице-->
        <LinearGradientBrush x:Key="ColorElement" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#a9efbb" Offset="0.4"/>
            <GradientStop Color="#70e48d" Offset="1.2"/>
        </LinearGradientBrush>

        <!--Цвет текста и кнопок-->
        <SolidColorBrush x:Key="cs_ButtonAndText" Color="#005538"/>

        <SolidColorBrush x:Key="cs_BorderBrush" Color="#FF97CEDA"/>

        <SolidColorBrush x:Key="cs_Watermark" Color="#bdb2b5" />

        <SolidColorBrush x:Key="cs_TextColor" Color="#FF333333"/>

        <SolidColorBrush x:Key="cs_RBBackground" Color="#3eff92"/>




        <!--При наведении. Триггер -->
        <LinearGradientBrush x:Key="cs_Trigger" StartPoint="0,0.5" EndPoint="1,0.5">
            <GradientStop Color="#00ffa9" Offset="0" />
            <GradientStop Color="#33ffba" Offset="3" />
        </LinearGradientBrush>
           
          <!--Шрифт Титульных надписей -->
        <FontFamily x:Key="FY">/Font/#Spectral</FontFamily>

        <ImageBrush x:Key="ib_CalendarAct" ImageSource="Icons/calen.png" />

        <!--Стиль Меню кнопок-->
        <Style x:Key="menuButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource cs_ButtonAndText}" />
            <Setter Property="Margin" Value="0 0 0 5" />
            <Setter Property="Height" Value="45" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Tag" Value="#005538" />
            <Setter Property="Template">
                <Setter.Value>
                    <!--ControlTemplate шаблон стиля-->
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--что делает элемент при наведении мыши на него-->

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#ffffff"/>
                    <Setter Property="Tag" Value="#ffffff"/>
                    <Setter Property="Background" Value="{StaticResource cs_Trigger}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="{StaticResource cs_ButtonAndText}">
                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>




        <!--Стиль иконки-->
        <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
            <Setter Property="Width" Value="23" />
            <Setter Property="Height" Value="23" />
            <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, 
      AncestorType={x:Type Button}}}" />
        </Style>


        <!--Стиль текста возле иконки-->
        <Style x:Key="menuButonText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontFamily" Value="{StaticResource FY}" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{Binding Path=Foreground,
     RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"/>
        </Style>


        <!--стиль кнопок день неделя месяц год в правом верхнем углу-->
        <Style x:Key="topmenuButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource cs_ButtonAndText}" />
            <Setter Property="FontWeight" Value="Black" />
            <Setter Property="FontFamily" Value="{StaticResource FY}" />
            <Setter Property="Margin" Value="5 0 0 0" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="80" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--при наведении-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#00ffa9"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>
            </Style.Triggers>
        </Style>



        <!--Стиль диаграммы -->
        <Style x:Key="titleText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource cs_ButtonAndText}" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontWeight" Value="Black" />
            <Setter Property="FontFamily" Value="{StaticResource FY}" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <LinearGradientBrush x:Key="BackgroundFill"   StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#b397e2" Offset="0.4"/>
            <GradientStop Color="#6a6ae4" Offset="1.2"/>
        </LinearGradientBrush>
        
        <!-- стиль линии в диаграмме-->
        <Style TargetType="lvc:LineSeries">
            <!--цвет линии -->
            <Setter Property="Stroke" Value="#6a6ae4"/>
            <!--цвет заливки под линией -->
            <Setter Property="Fill" Value="{StaticResource BackgroundFill}"/>
            <!--толщина линии -->
            <Setter Property="StrokeThickness" Value="0"/>
            <Setter Property="PointGeometrySize" Value="0"/>
        </Style>

        <!-- стиль для осей координат-->
        <Style TargetType="lvc:Axis">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Calibri" />
            <Setter Property="Foreground" Value="{StaticResource cs_ButtonAndText}" />
        </Style>

        <!--Стиль КАЛЬКУЛЯТОРА -->

        <Style  TargetType="Button" >
            <Setter Property="MinHeight" Value="50"/>
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="3, 3, 3, 3"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border Name="backgroundElement"  BorderThickness="0" CornerRadius="25" Background="{TemplateBinding Background}"/>
                            <ContentPresenter HorizontalAlignment="Center"
          VerticalAlignment="Center"
          TextElement.FontWeight="{TemplateBinding FontWeight}"
          TextElement.Foreground="{TemplateBinding Foreground}"
          TextElement.FontSize="{TemplateBinding FontSize}"
          TextElement.FontFamily="{TemplateBinding FontFamily}">
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="backgroundElement" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>


                </Setter.Value>

            </Setter>
            <EventSetter Event="Click" Handler="Button_Click"/>
        </Style>


        <!--Стиль калькулятора-->
        <Style  TargetType="Button" x:Key="orangeButtonSigns">
            <Setter Property="Background" Value="#FE9E09"/>
            <Setter Property="BorderBrush" Value="#FBC78E"/>
            <Setter Property="MinHeight" Value="50"/>
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="3, 3, 3, 3"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <EventSetter Event="Click" Handler="Button_Click"/>
                <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border Name="backgroundElement"  BorderThickness="0" CornerRadius="25" Background="{TemplateBinding Background}"/>
                            <ContentPresenter HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextElement.FontWeight="{TemplateBinding FontWeight}"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            TextElement.FontSize="{TemplateBinding FontSize}"
                            TextElement.FontFamily="{TemplateBinding FontFamily}">
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="backgroundElement" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
              
            </Setter>

        </Style>

        <Style  TargetType="Button" x:Key="orangeButton">
            <Setter Property="Background" Value="#FE9E09"/>
            <Setter Property="BorderBrush" Value="#FBC78E"/>
            <Setter Property="MinHeight" Value="50"/>
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="3, 3, 3, 3"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border Name="backgroundElement"  BorderThickness="0" CornerRadius="25" Background="{TemplateBinding Background}"/>
                            <ContentPresenter HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     TextElement.FontWeight="{TemplateBinding FontWeight}"
                     TextElement.Foreground="{TemplateBinding Foreground}"
                     TextElement.FontSize="{TemplateBinding FontSize}"
                     TextElement.FontFamily="{TemplateBinding FontFamily}">
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="backgroundElement" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>

        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="darkGreyButton">
            <Setter Property="Background" Value="{StaticResource cs_ButtonAndText}"/>
            <Setter Property="BorderBrush" Value="#737373"/>
        </Style>

        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="greyButton">
            <Setter Property="Background" Value="#a5a5a5"/>
            <Setter Property="BorderBrush" Value="#D9D9D7"/>
        </Style>

        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="blueButton">
            <Setter Property="Background" Value="#4285F4"/>
            <Setter Property="BorderBrush" Value="#95b6ed"/>
        </Style>


        <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="LightBlue" Points="3,15 15,15 9,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        
        <!--Стиль ScrollBar Прокрутки -->

        <!-- Полоса прокрутки, кнопка внизу, стиль-->
        <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="LightBlue" Points="3,3 9,15 15,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Стиль кнопки прокрутки -->
        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="1,0,1,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Fill="LightBlue" Margin="2"></Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
                </RepeatButton>
                <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        </Style>



    </Application.Resources>
</Application>
